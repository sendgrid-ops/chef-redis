# port <sentinel-port>
# The port that this sentinel instance will run on
port <%= @port %>

<% if node['network']['internal_ip'] %>
bind <%= node['network']['internal_ip'] %>
<% elsif @listen_addr %>
bind <%= @listen_addr %>
<% else %>
bind <%= node['ipaddress'] %>
<% end %>


# Specify the path for the unix socket that will be used to listen for
# incoming connections. There is no default, so Redis will not listen
# on a unix socket when not specified.
#
# unixsocket /tmp/redis.sock
# unixsocketperm 755
unixsocket <%= @unixsocket %>
unixsocketperm <%= @unixsocketperm %>

# By default Redis does not run as a daemon. Use 'yes' if you need it.
# Note that Redis will write a pid file in /var/run/redis.pid when daemonized.
daemonize <%= @daemonize %>

# When running daemonized, Redis writes a pid file in /var/run/redis.pid by
# default. You can specify a custom pid file location here.
pidfile <%= @pidfile %>

<% @masters.each do |name, options| %>
# Config for <%= name %> master
<% if options['ip'].nil? then %>
sentinel monitor <%= name %> <%= @node['network']['internal_ip'] %> <%= options['port'] %> <%= options['quorum'] %>
<% else %>
sentinel monitor <%= name %> <%= options['ip'] %> <%= options['port'] %> <%= options['quorum'] %>
<% end %>
sentinel down-after-milliseconds <%= name %> <%= options['down_after_milliseconds'] %>
sentinel can-failover <%= name %> <%= options['can_failover'] %>
sentinel parallel-syncs <%= name %> <%= options['parallel_syncs'] %>
sentinel failover-timeout <%= name %> <%= options['failover_timeout'] %>

<% end %>

# SCRIPTS EXECUTION
#
# sentinel notification-script and sentinel reconfig-script are used in order
# to configure scripts that are called to notify the system administrator
# or to reconfigure clients after a failover. The scripts are executed
# with the following rules for error handling:
#
# If script exists with "1" the execution is retried later (up to a maximum
# number of times currently set to 10).
#
# If script exists with "2" (or an higher value) the script execution is
# not retried.
#
# If script terminates because it receives a signal the behavior is the same
# as exit code 1.
#
# A script has a maximum running time of 60 seconds. After this limit is
# reached the script is terminated with a SIGKILL and the execution retried.

# NOTIFICATION SCRIPT
#
# sentinel notification-script <master-name> <script-path>
#
# Call the specified notification script for any sentienl event that is
# generated in the WARNING level (for instance -sdown, -odown, and so forth).
# This script should notify the system administrator via email, SMS, or any
# other messaging system, that there is something wrong with the monitored
# Redis systems.
#
# The script is called with just two arguments: the first is the event type
# and the second the event description.
#
# The script must exist and be executable in order for sentinel to start if
# this option is provided.
#
# Example:
#
# sentinel notification-script mymaster /var/redis/notify.sh

# CLIENTS RECONFIGURATION SCRIPT
#
# sentinel client-reconfig-script <master-name> <script-path>
#
# When the failover starts, ends, or is aborted, a script can be called in
# order to perform application-specific tasks to notify the clients that the
# configuration has changed and the master is at a different address.
#
# The script is called in the following cases:
#
# Failover started (a slave is already promoted)
# Failover finished (all the additional slaves already reconfigured)
# Failover aborted (in that case the script was previously called when the
#                   failover started, and now gets called again with swapped
#                   addresses).
#
# The following arguments are passed to the script:
#
# <master-name> <role> <state> <from-ip> <from-port> <to-ip> <to-port>
#
# <state> is "start", "end" or "abort"
# <role> is either "leader" or "observer"
#
# The arguments from-ip, from-port, to-ip, to-port are used to communicate
# the old address of the master and the new address of the elected slave
# (now a master) in the case state is "start" or "end".
#
# For abort instead the "from" is the address of the promoted slave and
# "to" is the address of the original master address, since the failover
# was aborted.
#
# This script should be resistant to multiple invocations.
#
# Example:
#
# sentinel client-reconfig-script mymaster /var/redis/reconfig.sh
